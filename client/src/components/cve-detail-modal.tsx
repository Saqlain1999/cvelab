import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogClose } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { ExternalLink, Download } from "lucide-react";
import { SiDocker, SiGithub } from "react-icons/si";
import type { Cve } from "@/types/cve";

interface CveDetailModalProps {
  cve: Cve | null;
  isOpen: boolean;
  onClose: () => void;
}

export function CveDetailModal({ cve, isOpen, onClose }: CveDetailModalProps) {
  if (!cve) return null;

  const getSeverityClass = (severity: string) => {
    switch (severity.toUpperCase()) {
      case 'CRITICAL': return 'severity-critical';
      case 'HIGH': return 'severity-high';
      case 'MEDIUM': return 'severity-medium';
      case 'LOW': return 'severity-low';
      default: return 'status-theoretical';
    }
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString();
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="w-full max-w-4xl max-h-[90vh] overflow-y-auto" data-testid="cve-detail-modal">
        <DialogHeader>
          <DialogTitle className="text-xl font-semibold" data-testid="modal-title">
            {cve.cveId} Details
          </DialogTitle>
          <DialogDescription className="text-sm text-muted-foreground">
            Published: {formatDate(cve.publishedDate)} ‚Ä¢ CVSS Score: {cve.cvssScore?.toFixed(1) || 'N/A'}
          </DialogDescription>
        </DialogHeader>
        
        <div className="space-y-6">
          {/* CVE Summary */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="md:col-span-2">
              <h4 className="font-medium mb-2">Description</h4>
              <p className="text-sm text-muted-foreground leading-relaxed" data-testid="cve-description">
                {cve.description}
              </p>
            </div>
            <div className="space-y-4">
              <div>
                <div className="text-sm font-medium mb-1">CVSS Score</div>
                <div className="text-2xl font-bold text-red-400" data-testid="cve-cvss-score">
                  {cve.cvssScore?.toFixed(1) || 'N/A'}
                </div>
              </div>
              <div>
                <div className="text-sm font-medium mb-1">Severity</div>
                <Badge className={`px-2 py-1 text-xs font-medium rounded-full border ${getSeverityClass(cve.severity)}`}>
                  {cve.severity}
                </Badge>
              </div>
              {cve.cvssVector && (
                <div>
                  <div className="text-sm font-medium mb-1">Vector</div>
                  <div className="text-sm font-mono text-muted-foreground break-all" data-testid="cve-vector">
                    {cve.cvssVector}
                  </div>
                </div>
              )}
            </div>
          </div>
          
          {/* Deployment Information */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h4 className="font-medium mb-3">Lab Deployment</h4>
              <div className="space-y-3">
                <div className="flex items-center gap-2">
                  <SiDocker className={cve.isDockerDeployable ? "text-accent" : "text-muted-foreground"} />
                  <span className="text-sm">
                    {cve.isDockerDeployable ? "Docker Compose Available" : "No Docker deployment"}
                  </span>
                </div>
                <div className="flex items-center gap-2">
                  <span className={`text-sm ${cve.isCurlTestable ? "text-blue-400" : "text-muted-foreground"}`}>
                    üîç
                  </span>
                  <span className="text-sm">
                    {cve.isCurlTestable ? "Curl/Nmap Fingerprintable" : "Not easily testable"}
                  </span>
                </div>
                
                {cve.isDockerDeployable && (
                  <div className="bg-muted p-3 rounded-md">
                    <div className="text-sm font-mono" data-testid="docker-command">
                      docker run -d --name {cve.cveId.toLowerCase()}-lab<br />
                      -p 8080:80 cve-lab/{cve.cveId.toLowerCase()}
                    </div>
                  </div>
                )}
              </div>
            </div>
            <div>
              <h4 className="font-medium mb-3">Exploit Resources</h4>
              <div className="space-y-2">
                {cve.pocUrls && cve.pocUrls.length > 0 ? (
                  cve.pocUrls.map((url, index) => (
                    <a
                      key={index}
                      href={url}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex items-center gap-2 text-sm text-primary hover:underline"
                      data-testid={`poc-link-${index}`}
                    >
                      <SiGithub className="w-4 h-4" />
                      Public PoC on GitHub
                      <ExternalLink className="w-3 h-3" />
                    </a>
                  ))
                ) : (
                  <p className="text-sm text-muted-foreground">No public PoCs found</p>
                )}
              </div>
            </div>
          </div>
          
          {/* Technical Details */}
          <div>
            <h4 className="font-medium mb-3">Technical Details</h4>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
              <div>
                <div className="text-muted-foreground">Affected Product:</div>
                <div data-testid="affected-product">{cve.affectedProduct || cve.technology || 'Unknown'}</div>
              </div>
              <div>
                <div className="text-muted-foreground">Affected Versions:</div>
                <div data-testid="affected-versions">
                  {cve.affectedVersions && cve.affectedVersions.length > 0 
                    ? cve.affectedVersions.join(', ') 
                    : 'Multiple versions'
                  }
                </div>
              </div>
              <div>
                <div className="text-muted-foreground">Attack Vector:</div>
                <div data-testid="attack-vector">{cve.attackVector || 'Unknown'}</div>
              </div>
              <div>
                <div className="text-muted-foreground">Category:</div>
                <div data-testid="category">{cve.category || 'Other'}</div>
              </div>
            </div>
          </div>
        </div>
        
        {/* Modal Actions */}
        <div className="flex items-center justify-end gap-3 pt-6 border-t border-border">
          {cve.isDockerDeployable && (
            <Button className="bg-accent text-accent-foreground hover:bg-accent/90" data-testid="button-deploy-lab">
              <SiDocker className="w-4 h-4 mr-2" />
              Deploy Lab
            </Button>
          )}
          {cve.hasPublicPoc && (
            <Button data-testid="button-export-poc">
              <Download className="w-4 h-4 mr-2" />
              Export PoC
            </Button>
          )}
        </div>
      </DialogContent>
    </Dialog>
  );
}
